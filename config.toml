[log]
# log levels all, debug, error, info, warn
level ="$LOG_LEVEL"

[server]
port = $PORT

[db]
connection_string = "host=$PG_HOST port=$PG_PORT user=$PG_USER dbname=$PG_NAME password=$PG_PASSWORD sslmode=$PG_SSLMODE"
migrations_subdir = ""

[vulcan]
schema = "http"
host = "$PERSISTENCE_HOST"

[sqs]
disabled = false
number_of_processors = $CHECKS_SQS_PROCESSORS
log_messages = false
polling_interval = $CHECKS_SQS_INTERVAL
wait_time = $CHECKS_SQS_WAIT
timeout = $CHECKS_SQS_TIMEOUT
queue_arn = "$CHECKS_SQS_ARN"
endpoint = "$AWS_SQS_ENDPOINT"

[scans_sns]
topic_arn = "$SCANS_SNS_ARN"
endpoint = "$AWS_SNS_ENDPOINT"
enabled = true

[checks_sns]
topic_arn = "$CHECKS_SNS_ARN"
endpoint = "$AWS_SNS_ENDPOINT"
enabled = true

[metrics]
enabled = $DOGSTATSD_ENABLED

[stream]
url = "$STREAM_URL"

[check_creator]
num_of_workers = $CHECKS_CREATOR_WORKERS
# in seconds.
period =  $CHECKS_CREATOR_PERIOD
checkpoint = $CHECKS_CREATOR_CHECKPOINT

[queues]

    [queues.default]
    arn = "$QUEUES_DEFAULT_ARN"

    # This will be depracted in favor of a more dynamic way (see below)
    [queues.nessus]
    arn = "$QUEUES_NESSUS_ARN"
    checktypes = $QUEUES_NESSUS_CHECKTYPES

    # This will be populated by run.sh with a dynamic list of queues based on env variables
    # [queues.q1]
    # arn = "$QUEUES_1_ARN"
    # checktypes = $QUEUES_1_CHECKTYPES

    # [queues.q2]
    # arn = "$QUEUES_2_ARN"
    # checktypes = $QUEUES_2_CHECKTYPES
